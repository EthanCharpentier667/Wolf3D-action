name: repository_mirroring

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"
env:
    MIRROR_URL: "git@github.com:EpitechPGEPromo2029/G-ING-210-NAN-2-1-wolf3d-ethan.charpentier.git"
    EXECUTABLES: "wolf3d"

jobs: 
    setup:
      runs-on: ubuntu-latest
      outputs:
        mirror_repo: ${{steps.extract_repo.outputs.repo_name}}
      steps:
        - name: Extract repository name from MIRROR_URL
          id: extract_repo
          run: echo "repo_name=${{env.MIRROR_URL}}" >> "$GITHUB_OUTPUT"
    check_coding_style:
        needs: setup
        if: github.repository != needs.setup.outputs.mirror_repo
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/epitech/coding-style-checker:latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Check coding style
              run: check.sh /Users/tanou/Grahpics/Wolf3D /Users/tanou/Grahpics/Wolf3D
            - name: Check coding style report
              run: |
                  if [ -s coding-style-reports.log ]; then
                    echo "Coding style issues found"
                    exit 1
                  fi
            - name: Create annotations
              if: failure()
              run: |
                  while IFS= read -r line; do
                    file=$line
                    line_number=$line
                    severity=$line
                    code=$line
                    echo "::error title=${severity} coding style error,file=${file},line=${line_number}::${code}"
                  done < coding-style-reports.log
    check_program_compilation:
        needs: check_coding_style
        runs-on: ubuntu-latest
        container:
            image: epitechcontent/epitest-docker:latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Check program compilation
              run: make
              timeout-minutes: 2
            - name: clean program execution
              run: make clean
            - name: Verify executables exist
              run: |
                OIFS=$IFS
                IFS=','
                for x in ${{env.EXECUTABLES}}
                  do
                    if [ ! -f "$x" ]; then
                      echo "::error title=Executable,file=$x::missing !"
                      exit 1
                    fi
                  done
                IFS=$OIFS
            - name: Run program
              run: |
                OIFS=$IFS
                IFS=','
                for x in ${{env.EXECUTABLES}}
                  do
                    if [ ! -x "$x" ]; then
                      echo "::error title=Executable,file=$x::is not executable!"
                      exit 1
                    fi
                  done
                IFS=$OIFS
    run_tests:
        needs: check_program_compilation
        runs-on: ubuntu-latest
        container:
            image: epitechcontent/epitest-docker:latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Run tests
              run: make tests_run
              timeout-minutes: 2
    push_to_mirror:
      needs: run_tests
      if: github.event_name == 'push'
      runs-on: ubuntu-latest
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4
          - name: Mirror repository
            uses: pixta-dev/repository-mirroring-action@v1
            with:
              target_repo_url: ${{env.MIRROR_URL}}
              ssh_private_key: ${{secrets.GIT_SSH_PRIVATE_KEY}}
